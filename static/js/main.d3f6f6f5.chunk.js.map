{"version":3,"sources":["components/Navbar.js","components/TextArea.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","React","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","role","onClick","changemode","htmlFor","placeholder","TextArea","_useState","useState","_useState2","_slicedToArray","text","setText","style","color","name","value","onChange","event","target","cols","rows","background","newText","toUpperCase","showAlert","toLowerCase","navigator","clipboard","writeText","replace","split","length","Alert","word","alert","charAt","slice","msg","prototype","PropTypes","string","about","contact","defaultProps","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","Fragment","document","body","heading","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.d3f6f6f5.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n// import { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        {/* <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link> */}\r\n        <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n            </li>\r\n            {/* <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"about\">{props.about}</a>\r\n            </li> */}\r\n            {/* <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"/\">{props.contact}</a>\r\n            </li> */}\r\n\r\n\r\n          </ul>\r\n          <div className=\"form-check form-switch mx-2\">\r\n            <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckChecked\" onClick={props.changemode} />\r\n              <label className={`form-check-label text-${props.mode==='light'?'dark':'light'}`}htmlFor=\"flexSwitchCheckChecked\">{props.mode==='light'?'Dark Mode':'Light Mode'}</label>\r\n          </div>\r\n          <form className=\"d-flex\">\r\n            <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n            <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n\r\n  )\r\n}\r\n\r\nNavbar.prototype = {\r\n  title: PropTypes.string,\r\n  about: PropTypes.string,\r\n  contact: PropTypes.string,\r\n}\r\n\r\nNavbar.defaultProps = {\r\n  title: \"Set title Here\",\r\n  about: 'Set About',\r\n  contact: 'Set Contact'\r\n}","import React, {useState} from 'react'\r\n\r\nexport default function TextArea(props) {\r\n    const onchangehandler = (event)=>{\r\n        setText(event.target.value);\r\n        // console.log(\"on change handler\");\r\n    }\r\n    const changeToUp = () =>{\r\n        // console.log('on click event');\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert('Change to Uppsercase','success');\r\n    }\r\n    const changeTolower = ()=>{\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert('Change to Lowercase','success');\r\n    }\r\n    const clearText = ()=>{\r\n        let newText = \"\";\r\n        setText(newText);\r\n        props.showAlert('Text has been cleared','success');\r\n    }\r\n    const copyToClipboard = ()=>{\r\n       \r\n        navigator.clipboard.writeText(text);\r\n        //let newText = text.select();\r\n        props.showAlert('Text has been Copied','success');\r\n          \r\n    }\r\n    const removeSpaces = () =>{\r\n       let newText = text.replace(/  +/g, ' ');\r\n        setText(newText);\r\n        props.showAlert('Extra Spaces has been removed','success');\r\n    }\r\n\r\n    const [text, setText] = useState(\"\");\r\n    \r\n  return (\r\n    <div>\r\n        <div className=\"container\">\r\n            <h1 style={{color:props.mode==='light'?'black':'white'}}>Enter Text Below </h1>\r\n            <textarea name=\"text\" value={text} id=\"text\" onChange={onchangehandler} cols=\"100\" rows=\"8\" style={{background:props.mode==='light'?'#fff':'#104b73',color:props.mode==='light'?'black':'white'}}></textarea> <br />\r\n            <button className=\"btn btn-primary\" onClick={changeToUp}>Uppercase</button>\r\n            <button className=\"btn btn-primary mx-2\" onClick={changeTolower}>Lowercase</button>\r\n            <button className=\"btn btn-primary mx-2\" onClick={copyToClipboard}>Copy to Clipboard</button>\r\n            <button className=\"btn btn-primary mx-2\" onClick={removeSpaces}>Remove Extra Spaces</button>\r\n            <button className=\"btn btn-primary mx-2\" onClick={clearText}>Clear</button>\r\n        </div>\r\n        <div className={`container text-${props.mode==='light'?'dark':'light'}`}>\r\n            <h2>Text Summary</h2>\r\n            <p>{text.split(\" \").length} No. of Words and {text.length} no. of Character </p>\r\n            <h2>Preview</h2>\r\n            <p>{text.length>0?text:\"Enter something to preview\"}</p>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalize = (word) =>{\r\n        let first = word.charAt(0).toUpperCase() + word.slice(1);\r\n        return first;\r\n    }\r\n    return (\r\n        props.alert &&\r\n        <div>\r\n            <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n                <strong> {capitalize(props.alert.type)} : </strong> {props.alert.msg}\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","\nimport Navbar from './components/Navbar';\nimport TextArea from './components/TextArea';\n// import Table from './components/Table';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\nimport About from './components/About';\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route,\n//   Link\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500\n    );\n  }\n\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.background = '#104b73';\n      showAlert('Dark mode is enabled', 'success');\n      document.title = 'Dark mode is enabled';\n    } else {\n      setMode('light');\n      document.body.style.background = '#fff';\n      showAlert('Light mode is enabled', 'success');\n      document.title = 'Light mode is enabled';\n    }\n  }\n  return (\n    <>\n      {/* <Router>\n        <Navbar title='EMumbai' about=\"About Us\" contact=\"Contact\" mode={mode} changemode={toggleMode} />\n        <Alert alert={alert} />\n        <Routes>\n          <Route path=\"/about\" element={<About mode={mode}/>}>\n            \n          </Route>\n          <Route path=\"/\" element={<TextArea heading=\"Please Enter the Text\" mode={mode} showAlert={showAlert} />} />\n            \n        \n        </Routes>\n      </Router> */}\n      \n        <Navbar title='EMumbai' about=\"About Us\" contact=\"Contact\" mode={mode} changemode={toggleMode} />\n        <Alert alert={alert} />\n        <TextArea heading=\"Please Enter the Text\" mode={mode} showAlert={showAlert} />\n          {/* <Route path=\"/about\" element={<About mode={mode}/>}>\n            \n          </Route> */}\n          {/* <Route path=\"/\" element={<TextArea heading=\"Please Enter the Text\" mode={mode} showAlert={showAlert} />} /> */}\n            \n        \n        {/* </Routes>\n      </Router> */}\n      {/* <Navbar /> */}\n\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}